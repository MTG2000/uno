{"version":3,"sources":["Components/Shared/Image/Image.jsx","api/socket.js","utils/EventsObject.js","utils/helpers.js","BotsServer/BotsServer.ts","Server/OfflineServer.ts","Server/OnlineServer.ts","api/API.ts","Components/Shared/Card/Card.jsx","utils/hooks.ts","Components/Game/TableStack/TableStack.jsx","Components/Game/CardsRow/CardsRow.jsx","Components/Game/PlayerStack/PlayerStack.jsx","Components/Game/CardsColumn/CardsColumn.jsx","Components/Game/LeftStack/LeftStack.jsx","Components/Game/RightStack/RightStack.jsx","Components/Game/TopStack/TopStack.jsx","Components/Game/DrawingStack/FrontCards.jsx","stores/features/gameSlice.ts","utils/audio.js","Components/Game/DrawingStack/DrawingStack.jsx","Components/Shared/Avatar/Avatar.jsx","Components/Shared/Button/Button.jsx","Components/Game/Scoreboard/Scoreboard.jsx","Components/Game/Game.tsx","Components/Shared/Paper/Paper.jsx","Components/Shared/TextField/TextField.jsx","Components/Shared/Typography/Typography.jsx","Components/CreateUser/ReChoiceIcon.jsx","Components/CreateUser/CreateUser.jsx","Components/MainMenu/MainMenu.jsx","Components/Shared/Switch/Switch.jsx","Components/CreateServer/CreateServer.jsx","Components/Shared/Table/Table.jsx","Components/JoinServer/JoinServer.jsx","Components/WaitingLobby/Loding.jsx","Components/WaitingLobby/Lobby.jsx","stores/store.ts","Components/StartPage/StartPage.jsx","utils/loader.ts","Components/Shared/Loading/Loading.jsx","Components/Shared/ErrorBoundary/ErrorBoundary.jsx","App.js","index.js"],"names":["Root","styled","div","props","ratio","Image","src","alt","socket","io","connect","reconnectionAttempts","EventsObject","events","addEventListener","name","handler","this","hasOwnProperty","push","removeEventListener","index","indexOf","splice","args","evs","l","length","i","shuffle","array","randomIndex","currentIndex","Math","floor","random","wrapMod","n","len","BotsServer","numberOfPlayers","players","curPlayer","direction","tableStk","drawingStk","sumDrawing","lastPlayerDrew","playersFinished","gameRunning","botTimeout","player","playerId","toString","id","cards","numToAdd","bot","data","isBot","fireEvent","setTimeout","start","forEach","idx","slice","find","p","map","moveBot","draw","cardId","card","moveEventObj","nxtPlayer","getCardById","canPlayCard","drawCnt","cardsToDraw","concat","getNextPlayer","action","unshift","filter","c","finishGame","moveForward","steps","move","playersFinishingOrder","init","oldCard","newCard","haveToDraw","isNewDawingCard","color","undefined","digit","OfflineServer","_botsServer","a","serverName","serverPassword","Promise","res","rej","emit","getPlayer","err","serverId","joinPlayer","addBots","ready","cb","removeAllListeners","localStorage","getItem","img","OnlineServer","servers","console","log","on","off","API","isOnline","_server","setOnlineMode","connected","getServers","getServerPlayers","createServer","joinServer","emitReady","leaveServer","onPlayersUpdated","unsub","onGameInit","onMove","onPlayerLeft","onFinishGame","disableShadow","playable","selectable","Card","flip","rotationY","layoutId","as","motion","className","initial","rotateY","abs","y","whileHover","transition","duration","animate","ease","onClick","useDispatch","useReduxDispatch","useSelector","useReduxSelector","TableStack","tableStack","state","game","width","highlight","cardsCnt","CardsRow","cardProps","layout","PlayerStack","currentPlayer","CardsColumn","LeftStack","RightStack","TopStack","FrontCards","React","memo","Array","fill","_","style","transform","cardLayoutIdIdx","generateDrawingCards","cnt","gameSlice","createSlice","initialState","drawingStack","inGame","reducers","setPlayerId","payload","startingCards","lastPlayerDrawed","playersFinal","myIdx","cardsToDistribute","forPlayer","orderOffset","isNullOrUndefined","stopGame","setInLobby","inLobby","moveCard","nextPlayer","curPlayerObj","newCards","shouldFlip","cardToMove","current","nextPlayre","movePlayer","myTurn","actions","_GameAudio","musicVolume","effectsVolume","audioTracks","audioTracksFailed","onload","url","audio","Audio","readyState","error","Object","values","Error","musicPlaying","volume","play","loop","reps","newVolume","GameAudio","variants","x","idleCenter","idleCorner","idleCornerDisabled","hover","scale","canHover","DrawingStack","dispatch","useState","gameStarted","setGameStarted","useEffect","playAudio","Cavatar","Avatar","seed","Cbutton","MuiButton","Button","children","href","navigate","useNavigate","disabled","Scoreboard","variant","textAlign","fontWeight","mb","Grid","container","justifyContent","mt","to","Game","finished","setFinished","playersOrder","setPlayersOrder","timeoutReady","clearTimeout","AnimateSharedLayout","replace","Paper","APaper","opacity","exit","alignItems","item","xs","md","lg","CtextField","input","TextField","Ctypography","MuiTypography","Typography","ReChoiceIcon","focusable","class","role","xmlns","viewBox","d","CreateUser","playerName","setPlayerName","JSON","parse","imgSeed","setImgSeed","setItem","spacing","type","placeholder","value","onChange","e","target","pad","sx","height","padding","MainMenu","onPlayOnline","playOnline","onPlayOffline","fontSize","display","rel","switchUnstyledClasses","track","thumb","focusVisible","checked","UnstyledSwitches","SwitchUnstyled","component","componentsProps","defaultChecked","CreateServer","setServerName","setServerPassword","isPrivate","setIsPrivate","handleCreateServer","Stack","label","sm","marginTop","gap","textShadow","CTableContainer","CTableHead","CTableCell","CTableBody","Table","CTableRow","JoinServer","showPrivate","setShowPrivate","selectedServer","setSelectedServer","password","setPassword","selectOne","setSelectOne","setServers","interval","setInterval","clearInterval","handleJoinServer","Checkbox","server","backgroundColor","border","borderWidth","borderRadius","boxShadow","background","cntPlayers","CLoading","span","Loding","Span","Lobby","setPlayers","location","useLocation","timeout","unsubInit","serverPlayers","pathname","flexWrap","store","configureStore","reducer","StartPage","mounted","setMounted","stiffness","h3","repeat","Infinity","times","delay","onAnimationComplete","Loader","imgs","audios","music","totalCnt","loadedCnt","onProgress","bind","keys","preload","preloadImage","_img","Loading","onLoaded","percentage","setPercentage","completed","setCompleted","load","round","ErrorBoundary","errorInfo","setState","Component","App","loadingAssets","setLoadingAssets","playMusic","AnimatePresence","exitBeforeEnter","path","element","key","ReactDOM","render","StrictMode","basename","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.b42bbde6.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Root = styled.div`\n  position: relative;\n  padding-top: ${(props) => props.ratio * 100}%;\n\n  img {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    object-fit: cover;\n    cursor: inherit;\n  }\n`;\n\nexport default function Image({ src, alt = \" \", ratio = 9 / 16, ...props }) {\n  return (\n    <Root ratio={ratio} {...props}>\n      <img src={src} alt={alt} />\n    </Root>\n  );\n}\n","import io from \"socket.io-client\";\n\nexport const socket = io.connect(\"http://localhost:5000\");\n\nsocket.reconnectionAttempts = 3;\n","export class EventsObject {\n  events = {};\n\n  addEventListener = function (name, handler) {\n    if (this.events.hasOwnProperty(name)) this.events[name].push(handler);\n    else this.events[name] = [handler];\n  };\n\n  removeEventListener = function (name, handler) {\n    /* This is a bit tricky, because how would you identify functions?\n           This simple solution should work if you pass THE SAME handler. */\n    if (!this.events.hasOwnProperty(name)) return;\n\n    var index = this.events[name].indexOf(handler);\n    if (index !== -1) this.events[name].splice(index, 1);\n  };\n\n  removeAllListeners() {\n    this.events = {};\n  }\n\n  fireEvent(name, ...args) {\n    if (!this.events.hasOwnProperty(name)) return;\n\n    if (!args) args = [];\n\n    var evs = this.events[name],\n      l = evs.length;\n\n    for (var i = 0; i < l; i++) {\n      evs[i](...args);\n    }\n  }\n}\n","export function shuffle(array) {\n  let currentIndex = array.length,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex !== 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex],\n    ];\n  }\n\n  return array;\n}\n\nexport function wrapMod(n, len) {\n  return (n + len) % len;\n}\n","import { EventsObject } from \"../utils/EventsObject\";\nimport { shuffle, wrapMod } from \"../utils/helpers\";\nimport { Card, Player } from \"../utils/interfaces\";\nimport data from \"./data.json\";\n\nexport interface IMoveEvent {\n  curPlayer: number;\n  nxtPlayer: number;\n  card?: Card;\n  draw?: number;\n  cardsToDraw?: Card[];\n}\n\nexport interface IStartEvent {\n  cards: Card[];\n  players: Player[];\n  playerId: string;\n}\n\nexport default class BotsServer extends EventsObject {\n  players: Player[] = [];\n  curPlayer = 0;\n  direction = 1;\n  tableStk: Card[] = [];\n  drawingStk: Card[] = [];\n  sumDrawing = 0;\n  lastPlayerDrew = false;\n  playersFinished: number[] = [];\n  gameRunning = false;\n  numberOfPlayers = 4;\n\n  botTimeout = null;\n\n  constructor(numberOfPlayers = 4) {\n    super();\n    this.numberOfPlayers = numberOfPlayers;\n  }\n\n  init() {\n    this.players = [];\n    this.curPlayer = 0;\n    this.direction = 1;\n    this.tableStk = [];\n    this.drawingStk = [];\n    this.sumDrawing = 0;\n    this.playersFinished = [];\n    this.lastPlayerDrew = false;\n    this.gameRunning = false;\n  }\n\n  joinPlayer(player: Player) {\n    const playerId = this.players.length.toString();\n\n    this.players.push({\n      ...player,\n      id: playerId,\n      cards: [],\n    });\n\n    return playerId;\n  }\n\n  addBots() {\n    const numToAdd = this.numberOfPlayers - this.players.length;\n    for (let i = 0; i < numToAdd; i++) {\n      const bot = data.players[i];\n      const playerId = this.players.length.toString();\n      this.players.push({\n        ...bot,\n        id: playerId,\n        cards: [],\n        isBot: true,\n      });\n    }\n    this.fireEvent(\"players-changed\", this.players);\n    if (this.players.length === this.numberOfPlayers)\n      setTimeout(() => {\n        this.start();\n      }, 1000);\n  }\n\n  start() {\n    const cards = [...data.cards] as Card[];\n    shuffle(cards);\n    shuffle(this.players);\n    const NUM_CARDS = 7;\n    this.players.forEach((player, idx) => {\n      player.cards = cards.slice(idx * NUM_CARDS, (idx + 1) * NUM_CARDS);\n    });\n    this.drawingStk = cards.slice(\n      this.players.length * NUM_CARDS,\n      cards.length\n    );\n\n    this.fireEvent(\"game-init\", {\n      cards: this.players.find((p) => !p.isBot)?.cards,\n      players: this.players.map((p) => ({ ...p, cards: [] })),\n    });\n  }\n\n  ready() {\n    if (this.players[this.curPlayer].isBot) this.moveBot();\n  }\n\n  move(draw: boolean | null, cardId: string | null) {\n    let moveEventObj: IMoveEvent = { nxtPlayer: 0, curPlayer: 0 };\n    let card: Card | undefined;\n\n    if (cardId) card = getCardById(cardId) as Card;\n\n    if (card && !canPlayCard(this.tableStk[0], card, this.lastPlayerDrew))\n      return false;\n\n    if (draw) {\n      let drawCnt = 1;\n      if (this.sumDrawing) {\n        drawCnt = this.sumDrawing;\n        this.sumDrawing = 0;\n      }\n\n      moveEventObj.draw = drawCnt;\n      if (drawCnt + 1 > this.drawingStk.length) {\n        this.drawingStk = shuffle(this.tableStk.slice(5, this.tableStk.length));\n        this.tableStk = this.tableStk.slice(0, 5);\n      }\n\n      moveEventObj.cardsToDraw = this.drawingStk.slice(0, drawCnt);\n      this.players[this.curPlayer].cards = this.drawingStk\n        .slice(0, drawCnt)\n        .concat(this.players[this.curPlayer].cards);\n\n      this.drawingStk = this.drawingStk.slice(drawCnt, this.drawingStk.length);\n      this.lastPlayerDrew = true;\n    }\n\n    let nxtPlayer = this.getNextPlayer(card);\n\n    moveEventObj.curPlayer = this.curPlayer;\n    moveEventObj.nxtPlayer = nxtPlayer;\n\n    if (card) {\n      if (card.action === \"draw two\") this.sumDrawing += 2;\n      if (card.action === \"draw four\") this.sumDrawing += 4;\n\n      this.tableStk.unshift(card);\n      moveEventObj.card = card;\n      this.players[this.curPlayer].cards = this.players[\n        this.curPlayer\n      ].cards.filter((c) => c.id !== card?.id);\n      this.lastPlayerDrew = false;\n\n      // Check if game finished\n      if (this.players[this.curPlayer].cards.length === 0)\n        this.playersFinished.push(this.curPlayer);\n      if (this.playersFinished.length === this.players.length - 1) {\n        this.playersFinished.push(nxtPlayer);\n        this.finishGame();\n        this.fireEvent(\"move\", moveEventObj as IMoveEvent);\n        return;\n      }\n    }\n\n    this.curPlayer = nxtPlayer;\n\n    this.fireEvent(\"move\", moveEventObj as IMoveEvent);\n\n    if (this.players[this.curPlayer].isBot) this.moveBot();\n  }\n\n  getNextPlayer(card?: Card) {\n    let nxtPlayer = this.curPlayer;\n\n    if (card?.action === \"reverse\") this.direction *= -1;\n\n    const moveForward = (steps: number = 1) => {\n      while (steps--) {\n        nxtPlayer = wrapMod(\n          nxtPlayer + 1 * this.direction,\n          this.players.length\n        );\n        while (this.players[nxtPlayer].cards.length === 0)\n          nxtPlayer = wrapMod(\n            nxtPlayer + 1 * this.direction,\n            this.players.length\n          );\n      }\n    };\n\n    //Move to next player ( if not wild card )\n    if (card?.action === \"skip\") {\n      moveForward(2);\n    } else if (card?.action !== \"wild\") moveForward();\n\n    return nxtPlayer;\n  }\n\n  moveBot() {\n    setTimeout(() => {\n      for (let i = 0; i < this.players[this.curPlayer].cards.length; i++) {\n        const card = this.players[this.curPlayer].cards[i];\n\n        if (canPlayCard(this.tableStk[0], card, this.lastPlayerDrew))\n          return this.move(false, card.id as string);\n      }\n\n      return this.move(true, null);\n    }, 1500);\n  }\n\n  finishGame() {\n    const playersFinishingOrder = this.playersFinished.map(\n      (idx) => this.players[idx]\n    );\n\n    this.init();\n    this.fireEvent(\"finish-game\", playersFinishingOrder);\n  }\n}\n\nexport function canPlayCard(\n  oldCard: Card,\n  newCard: Card,\n  lastPlayerDrew: boolean\n) {\n  const isOldDawingCard =\n    oldCard?.action && oldCard.action.indexOf(\"draw\") !== -1;\n  const haveToDraw = isOldDawingCard && !lastPlayerDrew;\n  const isNewDawingCard =\n    newCard?.action && newCard.action.indexOf(\"draw\") !== -1;\n\n  //No Card Played Yet\n  if (!oldCard) return true;\n\n  if (!haveToDraw && newCard.action === \"wild\") return true;\n\n  if (newCard.action === \"draw four\") return true;\n\n  if (oldCard.color === \"black\" && !haveToDraw) return true;\n\n  if (haveToDraw && isNewDawingCard) return true;\n\n  if (!haveToDraw && oldCard.color === newCard.color) return true;\n\n  if (oldCard.digit !== undefined && oldCard.digit === newCard.digit)\n    return true;\n\n  return false;\n}\n\nconst getCardById = (id: string) => data.cards.find((c) => c.id === id);\n","import { GameServer, Player, Card } from \"../utils/interfaces\";\nimport { ServerInterface } from \"./ServerInterface\";\nimport { socket } from \"../api/socket\";\nimport BotsServer from \"../BotsServer/BotsServer\";\n\nexport class OfflineServer implements ServerInterface {\n  player?: Player;\n\n  _botsServer: BotsServer;\n\n  /**\n   *\n   */\n  constructor() {\n    this._botsServer = new BotsServer();\n  }\n\n  async getServers(): Promise<GameServer[]> {\n    return [];\n  }\n\n  async getServerPlayers(): Promise<Player[]> {\n    return this._botsServer.players.map((p) => ({ ...p, cards: [] }));\n  }\n\n  async createServer(\n    serverName: string,\n    serverPassword?: string\n  ): Promise<string> {\n    return new Promise((res, rej) => {\n      socket.emit(\n        \"create-server\",\n        { serverName, serverPassword, player: this.getPlayer() },\n        (err: any, playerId: string) => {\n          if (err) return rej(err);\n          res(playerId);\n        }\n      );\n    });\n  }\n\n  async joinServer(serverId: string, serverPassword?: string): Promise<string> {\n    this._botsServer = new BotsServer();\n    this._botsServer.init();\n    const playerId = this._botsServer.joinPlayer(this.getPlayer());\n    setTimeout(() => this._botsServer.addBots(), 2000);\n    return playerId;\n  }\n\n  emitReady(): void {\n    this._botsServer.ready();\n  }\n\n  leaveServer(): void {\n    this._botsServer = null as any;\n  }\n  async move(draw: boolean | null, cardId: string): Promise<void> {\n    this._botsServer.move(draw, cardId);\n  }\n\n  onPlayersUpdated(cb: (players: Player[]) => void): () => void {\n    this._botsServer.addEventListener(\"players-changed\", cb);\n    return () => this._botsServer.removeEventListener(\"players-changed\", cb);\n  }\n\n  onGameInit(\n    cb: (data: { players: Player[]; cards: Card[] }) => void\n  ): () => void {\n    this._botsServer.addEventListener(\"game-init\", cb);\n    return () => this._botsServer.removeEventListener(\"game-init\", cb);\n  }\n\n  onMove(\n    cb: (data: {\n      nxtPlayer: number;\n      card: Card;\n      draw?: number | undefined;\n      cardsToDraw?: Card[] | undefined;\n    }) => void\n  ): () => void {\n    this._botsServer.addEventListener(\"move\", cb);\n    return () => this._botsServer.removeEventListener(\"move\", cb);\n  }\n\n  onPlayerLeft(cb: () => void): () => void {\n    this._botsServer.addEventListener(\"player-left\", cb);\n    return () => this._botsServer.removeEventListener(\"player-left\", cb);\n  }\n\n  onFinishGame(cb: (playersOrdered: Player[]) => void): () => void {\n    this._botsServer.addEventListener(\"finish-game\", cb);\n    return () => this._botsServer.removeEventListener(\"finish-game\", cb);\n  }\n\n  removeAllListeners() {\n    this._botsServer.removeAllListeners();\n  }\n\n  getPlayer(): Player {\n    if (this.player) return this.player;\n    this.player = {} as Player;\n    this.player.name = localStorage.getItem(\"playerName\") as string;\n    this.player.img = localStorage.getItem(\"playerImg\") as string;\n    return this.player;\n  }\n}\n","import { GameServer, Player, Card } from \"../utils/interfaces\";\nimport { ServerInterface } from \"./ServerInterface\";\nimport { socket } from \"../api/socket\";\n\nexport class OnlineServer implements ServerInterface {\n  player?: Player;\n\n  getServers(): Promise<GameServer[]> {\n    return new Promise((res, rej) => {\n      socket.emit(\"get-servers\", null, (err: any, servers: GameServer[]) => {\n        if (err) return rej(err);\n        console.log(servers);\n\n        res(servers);\n      });\n    });\n  }\n  getServerPlayers(): Promise<Player[]> {\n    return new Promise((res, rej) => {\n      socket.emit(\"get-server-players\", null, (err: any, players: Player[]) => {\n        if (err) return rej(err);\n        res(players);\n      });\n    });\n  }\n  createServer(serverName: string, serverPassword?: string): Promise<string> {\n    return new Promise((res, rej) => {\n      socket.emit(\n        \"create-server\",\n        { serverName, serverPassword, player: this.getPlayer() },\n        (err: any, playerId: string) => {\n          if (err) return rej(err);\n          res(playerId);\n        }\n      );\n    });\n  }\n\n  joinServer(serverId: string, serverPassword?: string): Promise<string> {\n    return new Promise((res, rej) => {\n      socket.emit(\n        \"join-server\",\n        { serverId, serverPassword, player: this.getPlayer() },\n        (err: any, playerId: string) => {\n          if (err) {\n            return rej(err);\n          }\n          setTimeout(() => {\n            // socket.emit(\"add-bots\");\n          }, 2000);\n          res(playerId);\n        }\n      );\n    });\n  }\n  emitReady(): void {\n    socket.emit(\"start-game\");\n  }\n  leaveServer(): void {\n    socket.emit(\"leave-server\");\n    this.removeAllListeners();\n  }\n  move(draw: boolean | null, cardId: string): Promise<void> {\n    return new Promise((res, rej) => {\n      socket.emit(\"move\", { cardId, draw }, (err: any) => {\n        if (err) return rej(err);\n        res();\n      });\n    });\n  }\n  onPlayersUpdated(cb: (players: Player[]) => void): () => void {\n    socket.on(\"players-changed\", cb);\n    return () => socket.off(\"players-changed\", cb);\n  }\n\n  onGameInit(\n    cb: (data: { players: Player[]; cards: Card[] }) => void\n  ): () => void {\n    socket.on(\"init-game\", cb);\n    return () => socket.off(\"init-game\", cb);\n  }\n  onMove(\n    cb: (data: {\n      nxtPlayer: number;\n      card: Card;\n      draw?: number | undefined;\n      cardsToDraw?: Card[] | undefined;\n    }) => void\n  ): () => void {\n    socket.on(\"move\", cb);\n    return () => socket.off(\"move\", cb);\n  }\n\n  onPlayerLeft(cb: () => void): () => void {\n    socket.on(\"player-left\", cb);\n    return () => socket.off(\"player-left\", cb);\n  }\n\n  onFinishGame(cb: (playersOrdered: Player[]) => void): () => void {\n    socket.on(\"finished-game\", cb);\n    return () => socket.off(\"finished-game\", cb);\n  }\n\n  removeAllListeners() {\n    socket.removeAllListeners();\n  }\n\n  getPlayer(): Player {\n    if (this.player) return this.player;\n    this.player = {} as Player;\n    this.player.name = localStorage.getItem(\"playerName\") as string;\n    this.player.img = localStorage.getItem(\"playerImg\") as string;\n    return this.player;\n  }\n}\n","import { OfflineServer } from \"../Server/OfflineServer\";\nimport { OnlineServer } from \"../Server/OnlineServer\";\nimport { ServerInterface } from \"../Server/ServerInterface\";\nimport { Player, GameServer, Card } from \"../utils/interfaces\";\nimport { socket } from \"./socket\";\n\nexport class _API implements ServerInterface {\n  isOnline = false;\n  _server: ServerInterface;\n  player?: Player;\n\n  constructor() {\n    if (this.isOnline) this._server = new OnlineServer();\n    else this._server = new OfflineServer();\n\n    socket.on(\"connect\", () => {\n      this.setOnlineMode(socket.connected);\n    });\n  }\n\n  setOnlineMode(isOnline: boolean) {\n    this.isOnline = isOnline;\n  }\n\n  playOnline(isOnline: boolean) {\n    if (isOnline) this._server = new OnlineServer();\n    else this._server = new OfflineServer();\n  }\n\n  getServers(): Promise<GameServer[]> {\n    console.log(this._server);\n\n    return this._server.getServers();\n  }\n  getServerPlayers(): Promise<Player[]> {\n    return this._server.getServerPlayers();\n  }\n  createServer(serverName: string, serverPassword?: string): Promise<string> {\n    return this._server.createServer(serverName, serverPassword);\n  }\n  joinServer(serverId: string, serverPassword?: string): Promise<string> {\n    return this._server.joinServer(serverId, serverPassword);\n  }\n\n  emitReady(): void {\n    this._server.emitReady();\n  }\n  leaveServer(): void {\n    this._server.leaveServer();\n  }\n  move(draw: boolean | null, cardId: string): Promise<void> {\n    return this._server.move(draw, cardId);\n  }\n  onPlayersUpdated(cb: (players: Player[]) => void): () => void {\n    return this._server.onPlayersUpdated(cb);\n  }\n  onGameInit(\n    cb: (data: { players: Player[]; cards: Card[] }) => void\n  ): () => void {\n    const unsub = this._server.onGameInit(cb);\n    console.log(this._server);\n    return unsub;\n  }\n  onMove(\n    cb: (data: {\n      nxtPlayer: number;\n      card: Card;\n      draw?: number | undefined;\n      cardsToDraw?: Card[] | undefined;\n    }) => void\n  ): () => void {\n    return this._server.onMove(cb);\n  }\n  onPlayerLeft(cb: () => void): () => void {\n    return this._server.onPlayerLeft(cb);\n  }\n  onFinishGame(cb: (playersOrdered: Player[]) => void): () => void {\n    return this._server.onFinishGame(cb);\n  }\n  getPlayer(): Player {\n    return this._server.getPlayer();\n  }\n}\n\nconst API = new _API();\n\nexport default API;\n","import styled from \"styled-components\";\nimport Image from \"../Image/Image\";\nimport { motion } from \"framer-motion\";\nimport API from \"../../../api/API\";\n\nconst Root = styled.div`\n  --color: var(--${(props) => props.color});\n\n  /* overflow: hidden; */\n  padding-top: 141%;\n  border-radius: calc(var(--cardWidth) / 10);\n\n  box-shadow: ${(props) =>\n    !props.disableShadow ? \"0 0 10px #292727\" : \"none\"};\n  position: relative;\n  transform-style: preserve-3d;\n\n  cursor: ${(props) => (props.playable ? \"pointer\" : \"inherit\")};\n  filter: ${(props) =>\n    props.selectable && !props.playable ? \"contrast(.5)\" : \"none\"};\n\n  .front,\n  .back {\n    border-radius: calc(var(--cardWidth) / 10);\n    background: whitesmoke;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    backface-visibility: hidden;\n  }\n\n  .front {\n    transform: translateZ(1px);\n    font-family: sans-serif;\n\n    .value {\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      color: var(--color);\n      font-size: var(--fontBig);\n      font-family: sans-serif !important;\n      font-weight: bold;\n      text-shadow: 5px 5px black;\n      -webkit-text-stroke: black 2px;\n    }\n\n    .card-icon {\n      width: 80%;\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n\n    .value-small {\n      position: absolute;\n      color: white;\n      -webkit-text-stroke: black 1.5px;\n      font-weight: bold;\n      font-size: var(--fontSmall);\n      font-style: italic;\n      font-family: sans-serif !important;\n\n      &.value-tl {\n        top: 14px;\n        left: 22px;\n      }\n\n      &.value-br {\n        bottom: 14px;\n        right: 22px;\n        transform: scale(-1);\n      }\n\n      @media screen and (max-width: 1000px) {\n        -webkit-text-stroke: black 1px;\n\n        .value {\n          text-shadow: 3px 3px black;\n        }\n\n        &.value-tl {\n          top: 9px;\n          left: 13px;\n        }\n\n        &.value-br {\n          bottom: 9px;\n          right: 13px;\n          transform: scale(-1);\n        }\n      }\n    }\n\n    .icon-small {\n      position: absolute;\n      width: 20%;\n      &.icon-tl {\n        top: 25px;\n        left: 20px;\n      }\n\n      &.icon-br {\n        bottom: 25px;\n        right: 20px;\n        transform: scale(-1);\n      }\n      @media screen and (max-width: 1000px) {\n        &.icon-tl {\n          top: 14px;\n          left: 11px;\n        }\n\n        &.icon-br {\n          bottom: 14px;\n          right: 11px;\n          transform: scale(-1);\n        }\n      }\n    }\n  }\n\n  .back {\n    transform: rotateY(180deg);\n  }\n`;\n\nexport default function Card({\n  id = \"\",\n  color = \"\",\n  digit,\n  action = \"\",\n  flip = false,\n  rotationY = 180,\n  layoutId,\n  selectable,\n  playable,\n  disableShadow = false,\n}) {\n  const onClick = () => {\n    if (playable) API.move(false, id);\n  };\n\n  const getFrontContent = () => {\n    if (color === \"black\" && action === \"wild\")\n      return <Image src={`assets/images/wild.png`} ratio={590 / 418} />;\n\n    if (color === \"black\")\n      return (\n        <>\n          <Image src={`assets/images/front-${color}.png`} ratio={590 / 418} />\n          <img src=\"assets/images/draw4.png\" className=\"card-icon\" alt=\"\" />\n          <img\n            className=\"icon-small icon-tl\"\n            src={`assets/images/${action}-blank.png`}\n            alt=\"\"\n          />\n          <img\n            className=\"icon-small icon-br\"\n            src={`assets/images/${action}-blank.png`}\n            alt=\"\"\n          />\n        </>\n      );\n\n    if (action)\n      return (\n        <>\n          <Image src={`assets/images/front-${color}.png`} ratio={590 / 418} />\n          <img\n            src={`assets/images/${action}-${color}.png`}\n            className=\"card-icon\"\n            alt=\"\"\n          />\n          <img\n            className=\"icon-small icon-tl\"\n            src={`assets/images/${action}-blank.png`}\n            alt=\"\"\n          />\n          <img\n            className=\"icon-small icon-br\"\n            src={`assets/images/${action}-blank.png`}\n            alt=\"\"\n          />\n        </>\n      );\n    return (\n      <>\n        <Image src={`assets/images/front-${color}.png`} ratio={590 / 418} />\n        <p className=\"value\">{digit}</p>\n        <p className=\"value-small value-tl\">{digit}</p>\n        <p className=\"value-small value-br\">{digit}</p>\n      </>\n    );\n  };\n\n  return (\n    <Root\n      as={motion.div}\n      color={color}\n      className=\"noselect\"\n      layoutId={layoutId}\n      initial={{\n        rotateY: flip ? Math.abs(180 - rotationY) : rotationY,\n        y: 0,\n      }}\n      whileHover={\n        playable\n          ? { y: -40, transition: { duration: 0.3 } }\n          : { y: 0, transition: { duration: 0.3 } }\n      }\n      animate={{ rotateY: rotationY, y: 0 }}\n      transition={{ duration: 0.5, ease: \"easeInOut\" }}\n      selectable={selectable}\n      playable={playable}\n      disableShadow={disableShadow}\n      onClick={onClick}\n    >\n      <div className=\"front\">{getFrontContent()}</div>\n      <div className=\"back\">\n        <Image src={`assets/images/backside.png`} ratio={590 / 418} />\n      </div>\n    </Root>\n  );\n}\n","import {\n  TypedUseSelectorHook,\n  useDispatch as useReduxDispatch,\n  useSelector as useReduxSelector,\n} from \"react-redux\";\nimport { AppDispatch, RootState } from \"../stores/store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useDispatch = () => useReduxDispatch<AppDispatch>();\nexport const useSelector: TypedUseSelectorHook<RootState> = useReduxSelector;\n","import styled from \"styled-components\";\nimport Card from \"../../Shared/Card/Card\";\nimport { useSelector } from \"../../../utils/hooks\";\n\nconst Root = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  --cardWidth: var(--cardWidthBigger);\n\n  .card-container {\n    position: absolute;\n    top: 0;\n    left: 0;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nexport default function TableStack() {\n  const tableStack = useSelector((state) => state.game.tableStack);\n\n  return (\n    <Root>\n      {tableStack.map((card) => (\n        <div className=\"card-container\" key={card.layoutId}>\n          <Card\n            layoutId={card.layoutId}\n            color={card.color}\n            digit={card.digit}\n            action={card.action}\n            width={200}\n            flip={card.flip}\n            rotationY={card.rotationY}\n          />\n        </div>\n      ))}\n    </Root>\n  );\n}\n","import styled from \"styled-components\";\nimport Card from \"../../Shared/Card/Card\";\n\nconst Root = styled.div`\n  display: flex;\n  justify-content: center;\n\n  filter: ${(props) =>\n    props.highlight ? \"drop-shadow(0 0 10px white)\" : \"brightness(0.6)\"};\n\n  --cardsCnt: ${(props) => props.cardsCnt};\n  --containerMaxWidth: 55vw;\n  .card-container {\n    &:not(:last-of-type) {\n      margin-right: calc(\n        -1 * max(calc((\n                  var(--cardWidth) * var(--cardsCnt) - var(--containerMaxWidth)\n                ) / (var(--cardsCnt)-1)), calc(var(--cardWidth) / 3))\n      );\n    }\n  }\n`;\n\nexport default function CardsRow({ cards, cardProps, highlight }) {\n  return (\n    <Root layout cardsCnt={cards.length} highlight={highlight}>\n      {cards.map((card) => (\n        <div className=\"card-container\" key={card.layoutId}>\n          <Card\n            id={card.id}\n            layoutId={card.layoutId}\n            color={card.color}\n            digit={card.digit}\n            action={card.action}\n            width={200}\n            flip={card.flip}\n            rotationY={card.rotationY}\n            selectable={cardProps?.selectable}\n            playable={card.playable}\n          />\n        </div>\n      ))}\n    </Root>\n  );\n}\n","import styled from \"styled-components\";\nimport { useSelector } from \"../../../utils/hooks\";\nimport CardsRow from \"../CardsRow/CardsRow\";\n\nconst Root = styled.div`\n  position: fixed;\n  bottom: -50px;\n  left: 50%;\n  transform: translateX(-50%);\n  --cardWidth: var(--cardWidthBigger);\n`;\n\nexport default function PlayerStack() {\n  const { player, currentPlayer } = useSelector((state) => ({\n    player: state.game.players[0],\n    currentPlayer: state.game.currentPlayer,\n  }));\n  const cards = player?.cards || [];\n\n  return (\n    <Root>\n      <CardsRow\n        cards={cards}\n        highlight={currentPlayer === 0}\n        cardProps={{ selectable: true }}\n      />\n    </Root>\n  );\n}\n","import styled from \"styled-components\";\nimport Card from \"../../Shared/Card/Card\";\n\nconst Root = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  filter: ${(props) =>\n    props.highlight ? \"drop-shadow(0 0 10px white)\" : \"brightness(0.6)\"};\n\n  --cardHeight: calc(1.41 * var(--cardWidth));\n  --cardsCnt: ${(props) => props.cardsCnt};\n  --containerMaxHeight: 50vh;\n  .card-container {\n    &:not(:last-of-type) {\n      margin-bottom: calc(\n        -1 * max(calc((\n                  var(--cardHeight) * var(--cardsCnt) -\n                    var(--containerMaxHeight)\n                ) / (var(--cardsCnt)-1)), calc(var(--cardHeight) / 2))\n      );\n    }\n  }\n`;\n\nexport default function CardsColumn({ cards, highlight }) {\n  return (\n    <Root layout cardsCnt={cards.length} highlight={highlight}>\n      {cards.map((card) => (\n        <div className=\"card-container\" key={card.layoutId}>\n          <Card\n            layoutId={card.layoutId}\n            color={card.color}\n            digit={card.digit}\n            action={card.action}\n            width={200}\n            flip={card.flip}\n            rotationY={card.rotationY}\n          />\n        </div>\n      ))}\n    </Root>\n  );\n}\n","import styled from \"styled-components\";\nimport { useSelector } from \"../../../utils/hooks\";\nimport CardsColumn from \"../CardsColumn/CardsColumn\";\n\nconst Root = styled.div`\n  position: fixed;\n  left: 0;\n  top: 50%;\n  transform: translateY(-50%);\n`;\n\nexport default function LeftStack() {\n  const { player, currentPlayer } = useSelector((state) => ({\n    player: state.game.players[1],\n    currentPlayer: state.game.currentPlayer,\n  }));\n  const cards = player?.cards || [];\n  return (\n    <Root>\n      <CardsColumn cards={cards} highlight={currentPlayer === 1} />\n    </Root>\n  );\n}\n","import styled from \"styled-components\";\nimport { useSelector } from \"../../../utils/hooks\";\nimport CardsColumn from \"../CardsColumn/CardsColumn\";\n\nconst Root = styled.div`\n  position: fixed;\n  right: 0;\n  top: 50%;\n  transform: translateY(-50%);\n`;\n\nexport default function RightStack() {\n  const { player, currentPlayer } = useSelector((state) => ({\n    player: state.game.players[3],\n    currentPlayer: state.game.currentPlayer,\n  }));\n  const cards = player?.cards || [];\n  return (\n    <Root>\n      <CardsColumn cards={cards} highlight={currentPlayer === 3} />\n    </Root>\n  );\n}\n","import styled from \"styled-components\";\nimport { useSelector } from \"../../../utils/hooks\";\nimport CardsRow from \"../CardsRow/CardsRow\";\n\nconst Root = styled.div`\n  position: fixed;\n  left: 50%;\n  top: 0;\n  transform: translate(-50%, -50%);\n`;\n\nexport default function TopStack() {\n  const { player, currentPlayer } = useSelector((state) => ({\n    player: state.game.players[2],\n    currentPlayer: state.game.currentPlayer,\n  }));\n  const cards = player?.cards || [];\n  return (\n    <Root>\n      <CardsRow cards={cards} highlight={currentPlayer === 2} />\n    </Root>\n  );\n}\n","import React from \"react\";\nimport Card from \"../../Shared/Card/Card\";\n\nconst FrontCards = React.memo(function () {\n  return (\n    <>\n      {Array(5)\n        .fill(0)\n        .map((_, idx) => (\n          <div\n            className=\"card-container\"\n            key={idx}\n            style={{\n              transform: `translate(${Math.random() * 20 - 10}px,${\n                Math.random() * 20 - 10\n              }px)`,\n            }}\n          >\n            <Card />\n          </div>\n        ))}\n    </>\n  );\n});\n\nexport default FrontCards;\n","import { createSlice, PayloadAction, current } from \"@reduxjs/toolkit\";\nimport { isNullOrUndefined } from \"util\";\nimport { canPlayCard } from \"../../BotsServer/BotsServer\";\nimport { wrapMod } from \"../../utils/helpers\";\nimport { Card, Player } from \"../../utils/interfaces\";\n\ninterface StoreState {\n  playerId: string;\n  currentPlayer: number;\n  nextPlayre: number;\n  orderOffset: number;\n  direction: number;\n  tableStack: Card[];\n  drawingStack: Card[];\n  players: Player[];\n  lastPlayerDrawed: boolean;\n  inGame: boolean;\n  inLobby: boolean;\n}\n\nlet cardLayoutIdIdx = 111;\n\nfunction generateDrawingCards(cnt: number) {\n  return Array(cnt)\n    .fill(0)\n    .map((i) => ({ layoutId: `id_${cardLayoutIdIdx++}` }));\n}\n\nconst initialState = {\n  tableStack: [] as Card[],\n  drawingStack: [] as Card[],\n  inGame: false,\n} as StoreState;\n\nexport const gameSlice = createSlice({\n  name: \"game\",\n  initialState,\n  reducers: {\n    setPlayerId(state, action: PayloadAction<string>) {\n      state.playerId = action.payload;\n    },\n    init: (\n      state,\n      action: PayloadAction<{ players: Player[]; cards: Card[] }>\n    ) => {\n      const { players, cards: startingCards } = action.payload;\n      state.direction = 1;\n      state.tableStack = [];\n      state.lastPlayerDrawed = false;\n      state.tableStack = [];\n      state.inGame = true;\n\n      // Find my player and re-order\n      let playersFinal: Player[] = [];\n      let myIdx = 0;\n      while (myIdx < players.length) {\n        if (players[myIdx].id === state.playerId) break;\n        myIdx++;\n      }\n\n      for (let i = myIdx; i < players.length; i++) {\n        playersFinal.push(players[i]);\n      }\n      state.currentPlayer = playersFinal.length % players.length;\n      for (let i = 0; i < myIdx; i++) {\n        playersFinal.push(players[i]);\n      }\n\n      //Set Cards for players\n      let cardsToDistribute: Card[] = startingCards.map((c) => ({\n        ...c,\n        layoutId: `id_${cardLayoutIdIdx++}`,\n        rotationY: 0,\n        playable: myIdx === 0,\n        forPlayer: 0,\n      }));\n\n      for (let i = 1; i < playersFinal.length; i++) {\n        cardsToDistribute = cardsToDistribute.concat(\n          Array(startingCards.length)\n            .fill(0)\n            .map(() => ({\n              layoutId: `id_${cardLayoutIdIdx++}`,\n              forPlayer: i,\n            }))\n        );\n      }\n      state.players = playersFinal;\n      state.drawingStack = cardsToDistribute.concat(generateDrawingCards(20));\n      state.orderOffset = myIdx;\n    },\n\n    ready(state) {\n      state.players = state.players.map((player, idx) => {\n        return {\n          ...player,\n          cards: state.drawingStack.filter((c) => c.forPlayer === idx),\n        };\n      });\n\n      state.drawingStack = state.drawingStack.filter((c) =>\n        isNullOrUndefined(c.forPlayer)\n      );\n    },\n\n    stopGame(state) {\n      state.inGame = false;\n    },\n\n    setInLobby(state, action: PayloadAction<boolean>) {\n      state.inLobby = action.payload;\n    },\n\n    moveCard(\n      state,\n      action: PayloadAction<{\n        nextPlayer: number;\n        card?: Card;\n        draw?: number;\n        cardsToDraw?: Card[];\n      }>\n    ) {\n      let { nextPlayer, card, cardsToDraw = [], draw } = action.payload;\n\n      const curPlayerObj = state.players[state.currentPlayer];\n\n      nextPlayer = wrapMod(\n        nextPlayer - state.orderOffset,\n        state.players.length\n      );\n\n      if (card?.action === \"reverse\") state.direction *= -1;\n\n      if (draw) {\n        state.players = state.players.map((p) => {\n          if (p.id === curPlayerObj.id) {\n            let newCards = state.drawingStack.slice(0, draw);\n            if (curPlayerObj.id === state.playerId && cardsToDraw) {\n              newCards = newCards.map((c, idx) => ({\n                ...c,\n                ...cardsToDraw[idx],\n                rotationY: 0,\n              }));\n            }\n            return {\n              ...p,\n              cards: p.cards.concat(newCards),\n            };\n          }\n          return p;\n        });\n        state.drawingStack = state.drawingStack\n          .slice(draw)\n          .concat(generateDrawingCards(draw));\n        state.lastPlayerDrawed = true;\n      }\n\n      if (card) {\n        let layoutId: string | undefined = \"\";\n        let shouldFlip = false;\n        if (curPlayerObj.id !== state.playerId) {\n          layoutId =\n            curPlayerObj.cards[\n              Math.floor(Math.random() * curPlayerObj.cards.length)\n            ].layoutId;\n          shouldFlip = true;\n        } else {\n          layoutId = curPlayerObj.cards.find((c) => c.id === card?.id)\n            ?.layoutId;\n          const cardToMove = curPlayerObj.cards.filter(\n            (c) => c.layoutId === layoutId\n          )[0];\n          console.log(layoutId, current(cardToMove));\n\n          card.color = cardToMove.color;\n          card.action = cardToMove.action;\n          card.digit = cardToMove.digit;\n        }\n\n        state.tableStack = [\n          ...state.tableStack.slice(-1),\n          {\n            layoutId,\n            color: card.color,\n            action: card.action,\n            digit: card.digit,\n            flip: shouldFlip,\n            rotationY: 0,\n          },\n        ];\n        state.players = state.players.map((p) => {\n          if (p === curPlayerObj) {\n            return {\n              ...p,\n              cards: p.cards.filter((c) => c.layoutId !== layoutId),\n            };\n          }\n          return p;\n        });\n        state.lastPlayerDrawed = false;\n      }\n\n      state.nextPlayre = nextPlayer;\n    },\n    movePlayer(state) {\n      state.players = state.players.map((p) => {\n        if (p.id === state.playerId) {\n          const myTurn = state.nextPlayre === 0;\n\n          return {\n            ...p,\n            cards: p.cards.map((c) => {\n              return {\n                ...c,\n                playable:\n                  myTurn &&\n                  canPlayCard(\n                    state.tableStack[state.tableStack.length - 1],\n                    c,\n                    state.lastPlayerDrawed\n                  ),\n              };\n            }),\n          };\n        }\n        return p;\n      });\n      state.currentPlayer = state.nextPlayre;\n    },\n  },\n});\n\nexport const {\n  init,\n  ready,\n  stopGame,\n  moveCard,\n  movePlayer,\n  setInLobby,\n  setPlayerId,\n} = gameSlice.actions;\n\nexport default gameSlice.reducer;\n","class _GameAudio {\n  musicVolume = 1;\n  effectsVolume = 1;\n  audioTracks = {};\n  musicPlaying;\n  audioTracksFailed = {};\n\n  preload(audioTracks, onload) {\n    this.audioTracks = audioTracks;\n    for (const url of Object.values(this.audioTracks)) {\n      var audio = new Audio();\n\n      const cb = () => {\n        onload();\n      };\n\n      audio.addEventListener(\n        \"canplaythrough\",cb,\n        false\n      );\n      audio.src = url;\n\n      setTimeout(()=>{\n        if(audio.readyState !== 4){\n          this.audioTracksFailed[url] = true;\n          onload();\n          audio.removeEventListener(\"canplaythrough\",cb);\n          console.error(\"Failed to load audio track: \", url);\n        }\n      }, 10000)\n    }\n  }\n\n  playMusic(name) {\n    if (!this.audioTracks[name])\n      throw new Error(\"No Audio Track with this name\");\n\n    if(this.audioTracksFailed[this.audioTracks[name]]) return;\n\n    if (this.musicPlaying) return;\n    this.musicPlaying = new Audio(this.audioTracks[name]);\n    this.musicPlaying.volume = this.musicVolume * 0.5;\n    this.musicPlaying.play();\n    this.musicPlaying.loop = true;\n  }\n\n  playAudio(name, reps = 1) {\n    if (!this.audioTracks[name])\n      throw new Error(\"No Audio Track with this name\");\n\n    if(this.audioTracksFailed[this.audioTracks[name]]) return;\n\n    for (let i = 0; i < reps; i++) {\n      setTimeout(() => {\n        let audio = new Audio(this.audioTracks[name]);\n        audio.volume = this.effectsVolume;\n        audio.play();\n      }, 200 * i);\n    }\n  }\n\n  changeMusicVolume(newVolume) {\n    this.musicVolume = newVolume;\n  }\n\n  changeEffectsVolume(newVolume) {\n    this.effectsVolume = newVolume;\n  }\n}\n\nconst GameAudio = new _GameAudio();\n\nexport default GameAudio;\n","import styled from \"styled-components\";\nimport Card from \"../../Shared/Card/Card\";\nimport FrontCards from \"./FrontCards\";\nimport { motion } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"../../../utils/hooks\";\nimport { ready } from \"../../../stores/features/gameSlice\";\nimport API from \"../../../api/API\";\nimport GameAudio from \"../../../utils/audio\";\n\nconst variants = {\n  init: { x: 0, y: 0 },\n  idleCenter: { x: \"calc(50vw - 50%)\", y: \"calc(-1 * 50vh + 50% )\" },\n  idleCorner: { x: \"10px\", y: \"70px\" },\n  idleCornerDisabled: { x: \"10px\", y: \"80%\", transition: { duration: 1 } },\n\n  hover: { scale: 1.05, transition: { duration: 0.3 } },\n};\n\nconst Root = styled.div`\n  --cardWidth: var(--cardWidthBigger);\n\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  transform: translate(-50%, 50%);\n\n  width: var(--cardWidth);\n  height: calc(var(--cardWidth) * 1.41);\n  z-index: 10;\n\n  cursor: ${(props) => (props.canHover ? \"pointer\" : \"initial\")};\n  filter: ${(props) =>\n    !props.highlight ? \"contrast(.5)\" : \"drop-shadow(0 0 10px white)\"};\n\n  .card-container {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n  }\n`;\n\nexport default function DrawingStack() {\n  const { drawingStack, currentPlayer } = useSelector((state) => ({\n    drawingStack: state.game.drawingStack,\n    currentPlayer: state.game.currentPlayer,\n  }));\n  const dispatch = useDispatch();\n\n  const [gameStarted, setGameStarted] = useState(false);\n\n  const handleClick = () => {\n    if (currentPlayer === 0) API.move(true);\n  };\n\n  useEffect(() => {\n    setTimeout(() => GameAudio.playAudio(\"shuffle\"), 1800);\n    setTimeout(() => {\n      dispatch(ready());\n      setGameStarted(true);\n    }, 2000);\n  }, [dispatch]);\n\n  const canHover = gameStarted && currentPlayer === 0;\n  const highlight = canHover || !gameStarted;\n\n  return (\n    <Root\n      as={motion.div}\n      onClick={handleClick}\n      canHover={canHover}\n      highlight={highlight}\n      gameStarted={gameStarted}\n      variants={variants}\n      initial=\"init\"\n      animate={\n        gameStarted\n          ? canHover\n            ? \"idleCorner\"\n            : \"idleCornerDisabled\"\n          : \"idleCenter\"\n      }\n      whileHover={canHover ? \"hover\" : { scale: 1 }}\n    >\n      {drawingStack.map((card) => (\n        <div className=\"card-container\" key={card.layoutId}>\n          <Card\n            layoutId={card.layoutId}\n            color={card.color}\n            digit={card.digit}\n            action={card.action}\n            width={200}\n            disableShadow={true}\n          />\n        </div>\n      ))}\n      <FrontCards />\n    </Root>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nconst Cavatar = styled.div`\n  width: 100%;\n  min-width: 100px;\n  max-width: 120px;\n  border-radius: 50%;\n  border: 1px solid rgb(0 3 24);\n  position: relative;\n  padding-top: 100%;\n  box-shadow: 0px 0px 6px 3px rgb(23 25 41);\n\n  img {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    border-radius: 50%;\n\n    object-fit: cover;\n    object-position: top;\n  }\n`;\nconst Avatar = ({ seed }) => {\n  return (\n    <Cavatar> \n      <img src={`https://api.dicebear.com/9.x/adventurer/svg?seed=${seed}`} alt=\"\" />\n    </Cavatar>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Button as MuiButton } from \"@mui/material\";\nimport { useNavigate } from \"react-router\";\n\nconst Cbutton = styled(MuiButton)`\n  &.MuiButton-root {\n    padding: 16px 36px;\n    text-transform: capitalize;\n    background-color: rgba(0, 0, 0, 0.3);\n    border: 1px solid rgb(2 15 108);\n    border-radius: 12px;\n    text-align: center;\n    color: white;\n    transition: transform 0.1s ease-in-out;\n    transition-timing-function: ease-out;\n    margin: 0;\n    display: inline-flex;\n    flex-direction: column;\n\n    &:disabled {\n      opacity: 0.5;\n      pointer-events: none;\n    }\n\n    :hover {\n      cursor: pointer;\n      transform: scale(1.05);\n      transition-timing-function: ease-in;\n      background-color: rgba(0, 0, 0, 0.4);\n    }\n\n    :active {\n      transform: scale(0.96);\n      transition-duration: 0.05s;\n    }\n  }\n`;\nconst Button = ({ children, href, ...props }) => {\n  const navigate = useNavigate();\n\n  const onClick = () => {\n    console.log(props.disabled);\n    if (props.onClick) props.onClick();\n    if (href && !props.disabled) navigate(href);\n  };\n\n  return (\n    <Cbutton {...props} onClick={onClick}>\n      {children}\n    </Cbutton>\n  );\n};\n\nexport default Button;\n","import styled from \"styled-components\";\nimport Avatar from \"../../Shared/Avatar/Avatar\";\nimport { Grid, Typography } from \"@mui/material\";\nimport Button from \"../../Shared/Button/Button\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"../../../utils/hooks\";\n\nconst Root = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: rgba(0, 0, 0, 0.8);\n  color: white;\n  padding: 40px 70px;\n  border-radius: 12px;\n  font-size: 2rem;\n  .row {\n    &.me {\n      color: yellow;\n\n      animation: pulse 1s infinite;\n    }\n\n    display: flex;\n    align-items: center;\n    gap: 24px;\n\n    .order {\n      width: 50px;\n      font-size: 1.5rem;\n    }\n\n    .img {\n      width: 50px;\n    }\n  }\n\n  @keyframes pulse {\n    50% {\n      transform: scale(1.05);\n    }\n  }\n`;\n\nexport default function Scoreboard({ players }) {\n  const playerId = useSelector((state) => state.game.playerId);\n\n  return (\n    <Root>\n      <Typography variant=\"h2\" textAlign=\"center\" fontWeight={600} mb={6}>\n        Game Finished!!\n      </Typography>\n      {players.map((p, idx) => (\n        <div className={`row ${p.id === playerId && \"me\"}`} key={idx}>\n          <div className=\"order\">{idx + 1}</div>\n          <div className=\"img\">\n            <Avatar seed={`${p.name}${p.img}`} />{\" \"}\n          </div>\n          <div className=\"name\">{p.name}</div>\n        </div>\n      ))}\n\n      <Grid container justifyContent=\"center\" mt={6}>\n        <Link to=\"/main-menu\">\n          <Button onClick={() => {}}>Play Again</Button>\n        </Link>\n      </Grid>\n    </Root>\n  );\n}\n","import { AnimateSharedLayout } from \"framer-motion\";\nimport TableStack from \"./TableStack/TableStack.jsx\";\nimport PlayerStack from \"./PlayerStack/PlayerStack.jsx\";\nimport { useEffect, useState } from \"react\";\nimport LeftStack from \"./LeftStack/LeftStack.jsx\";\nimport RightStack from \"./RightStack/RightStack.jsx\";\nimport TopStack from \"./TopStack/TopStack.jsx\";\nimport DrawingStack from \"./DrawingStack/DrawingStack.jsx\";\nimport { useDispatch, useSelector } from \"../../utils/hooks\";\nimport {\n  moveCard,\n  movePlayer,\n  stopGame,\n} from \"../../stores/features/gameSlice\";\nimport Scoreboard from \"./Scoreboard/Scoreboard.jsx\";\nimport { Player } from \"../../utils/interfaces.js\";\nimport API from \"../../api/API\";\nimport { Navigate, } from \"react-router\";\nimport GameAudio from \"../../utils/audio.js\";\n\nexport default function Game() {\n  const dispatch = useDispatch();\n  const [finished, setFinished] = useState(false)\n  const [playersOrder, setPlayersOrder] = useState<Player[]>([]);\n  const inGame = useSelector(state => state.game.inGame)\n\n\n  useEffect(() => {\n    const timeoutReady = setTimeout(() => {\n      API.emitReady()\n    }, 2000)\n    API.onMove(({ card, draw, cardsToDraw, nxtPlayer }) => {\n\n      dispatch(\n        moveCard({\n          nextPlayer: nxtPlayer,\n          card,\n          draw,\n          cardsToDraw,\n        })\n      );\n      if (draw) {\n        GameAudio.playAudio('draw', draw);\n      } else GameAudio.playAudio('play')\n      setTimeout(() => dispatch(movePlayer()), 500);\n    })\n\n    API.onFinishGame((players: Player[]) => {\n      setFinished(true);\n      setPlayersOrder(players);\n    })\n\n    return () => {\n      API.leaveServer();\n      dispatch(stopGame());\n      clearTimeout(timeoutReady)\n    }\n  }, [dispatch]);\n\n\n  if (!inGame) return <Navigate replace to=\"/main-menu\" />;\n\n  return (\n    <div>\n      <AnimateSharedLayout>\n        <TableStack />\n        <TopStack />\n        <LeftStack />\n        <RightStack />\n        <PlayerStack />\n        <DrawingStack />\n      </AnimateSharedLayout>\n\n      {finished && <Scoreboard players={playersOrder} />}\n    </div>\n  );\n}\n","import Grid from \"@mui/material/Grid\";\nimport { motion } from \"framer-motion\";\nimport styled from \"styled-components\";\n\nconst Paper = styled.div`\n  background: var(--panel-bg);\n  margin: 20vh 5vw;\n  padding: 75px 42px 64px;\n  text-align: center;\n  min-height: 60vh;\n  border-radius: 1rem;\n  box-shadow: 1px 3px 18px rgb(0 6 50);\n  position: relative;\n\n  .uno-img {\n    width: 150px;\n    position: absolute;\n    top: 0;\n    left: 50%;\n    transform: translateX(-50%) translateY(-50%);\n  }\n`;\n\nconst APaper = ({ children, ...props }) => {\n  return (\n    <Grid\n      as={motion.div}\n      initial={{ opacity: 0, x: 500 }}\n      animate={{ opacity: 1, x: 0 }}\n      exit={{ opacity: 0, x: -500 }}\n      transition={{ duration: 0.7 }}\n      container\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      {...props}\n    >\n      <Grid item xs={12} md={10} lg={8}>\n        <Paper>\n          <img className=\"uno-img\" src=\"assets/images/uno-logo.png\" alt=\"\" />\n          {children}\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default APaper;\n","import styled from \"styled-components\";\n\nconst CtextField = styled.input`\n  display: inline-block;\n  width: 75%;\n  height: 30%;\n  padding: 22px 32px;\n  background-color: rgba(0, 0, 0, 0.3);\n  border: 1px solid rgb(2 15 108);\n  border-radius: 10px;\n  text-align: center;\n  font-size: large;\n  color: var(--secondary);\n  box-shadow: inset 1px 3px 10px #1a1b35;\n\n  ::placeholder {\n    color: #fff;\n    opacity: 1;\n  }\n  :focus {\n    outline: 2px solid var(--secondary);\n    outline-offset: 2px;\n  }\n`;\nconst TextField = (props) => {\n  return <CtextField {...props} />;\n};\n\nexport default TextField;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Typography as MuiTypography } from \"@mui/material\";\n\nconst Ctypography = styled(MuiTypography)`\n  color: white;\n  font-weight: bold;\n`;\nconst Typography = (props) => {\n  return <Ctypography {...props} />;\n};\n\nexport default Typography;\n","import React from \"react\";\n\nconst ReChoiceIcon = () => {\n  return (\n    <svg\n      style={{ width: \"60%\", filter: \"drop-shadow(0 0 3px white)\" }}\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      data-prefix=\"fas\"\n      data-icon=\"arrow-rotate-left\"\n      class=\"svg-inline--fa fa-arrow-rotate-left\"\n      role=\"img\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M480 256c0 123.4-100.5 223.9-223.9 223.9c-48.86 0-95.19-15.58-134.2-44.86c-14.14-10.59-17-30.66-6.391-44.81c10.61-14.09 30.69-16.97 44.8-6.375c27.84 20.91 61 31.94 95.89 31.94C344.3 415.8 416 344.1 416 256s-71.67-159.8-159.8-159.8C205.9 96.22 158.6 120.3 128.6 160H192c17.67 0 32 14.31 32 32S209.7 224 192 224H48c-17.67 0-32-14.31-32-32V48c0-17.69 14.33-32 32-32s32 14.31 32 32v70.23C122.1 64.58 186.1 32.11 256.1 32.11C379.5 32.11 480 132.6 480 256z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default ReChoiceIcon;\n","import React from \"react\";\nimport Paper from \"../Shared/Paper/Paper\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"../Shared/TextField/TextField\";\nimport Avatar from \"../Shared/Avatar/Avatar\";\nimport Button from \"../Shared/Button/Button\";\nimport Typography from \"../Shared/Typography/Typography\";\nimport ReChoiceIcon from \"./ReChoiceIcon\";\n\nconst CreateUser = () => {\n  const getLocalStorageName = () => {\n    if (localStorage.getItem(\"playerName\"))\n      return localStorage.getItem(\"playerName\");\n    else return \"\";\n  };\n  const getLocalStorageImg = () => {\n    if (localStorage.getItem(\"playerImg\"))\n      return JSON.parse(localStorage.getItem(\"playerImg\"));\n    else return Math.random() * 100;\n  };\n  const [playerName, setPlayerName] = React.useState(getLocalStorageName);\n  const [imgSeed, setImgSeed] = React.useState(getLocalStorageImg);\n\n  React.useEffect(() => {\n    localStorage.setItem(\"playerName\", playerName);\n    localStorage.setItem(\"playerImg\", imgSeed);\n  }, [playerName, imgSeed]);\n\n  return (\n    <Paper>\n      <Grid container justifyContent=\"center\" spacing={2}>\n        <Grid item xs={10}>\n          <Typography>Enter Your Name</Typography>\n        </Grid>\n        <Grid item xs={10} md={6}>\n          <TextField\n            type=\"text\"\n            placeholder=\"\"\n            value={playerName}\n            onChange={(e) => setPlayerName(e.target.value)}\n            pad\n          />\n        </Grid>\n\n        <Grid\n          item\n          container\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          spacing={4}\n          xs={10}\n        >\n          <Grid item sx={11}>\n            <Avatar seed={`${playerName}${imgSeed}`} />\n          </Grid>\n          <Grid item xs={1}>\n            <Button\n              onClick={() => setImgSeed((seed) => seed + 1)}\n              style={{\n                width: \"4vw\",\n                height: \"4vw\",\n                padding: \"35%\",\n              }}\n            >\n              <ReChoiceIcon />\n            </Button>\n          </Grid>\n        </Grid>\n        <Grid item xs={10}>\n          {playerName && imgSeed && (\n            <Button href=\"/main-menu\">\n              <Typography> Save & Go </Typography>\n            </Button>\n          )}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default CreateUser;\n","import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"../Shared/Paper/Paper\";\nimport Button from \"../Shared/Button/Button\";\nimport Typography from \"../Shared/Typography/Typography\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport API from \"../../api/API\";\nimport { useDispatch } from \"../../utils/hooks\";\nimport { setInLobby, setPlayerId } from \"../../stores/features/gameSlice\";\nconst style = {\n  color: \"#fff\",\n};\n\nconst MainMenu = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const onPlayOnline = () => {\n    API.playOnline(true);\n  };\n\n  const onPlayOffline = async () => {\n    API.playOnline(false);\n    const playerId = await API.joinServer();\n    dispatch(setPlayerId(playerId));\n    dispatch(setInLobby(true));\n    navigate(\"/waiting-lobby\");\n  };\n\n  return (\n    <Paper key=\"main-menu\">\n      <Grid container alignItems=\"center\" justifyContent=\"center\" spacing={4}>\n        <Grid item xs={10}>\n          <Typography fontSize={22}>Start Playing</Typography>\n        </Grid>\n        <Grid\n          item\n          container\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          spacing={2}\n          sx={12}\n        >\n          <Grid item xs={12} md={5}>\n            <Button\n              disabled={!API.isOnline}\n              style={{ width: \"80%\" }}\n              href=\"/create-server\"\n              onClick={onPlayOnline}\n            >\n              <img src=\"assets/icons/add.svg\" alt=\"\" />\n              <Typography>Create A Game</Typography>\n            </Button>\n          </Grid>\n          <Grid item sx={{ display: { xs: \"none\", md: \"initial\" } }} md={2}>\n            <Typography>OR</Typography>\n          </Grid>\n          <Grid item xs={12} md={5}>\n            <Button\n              disabled={!API.isOnline}\n              style={{ width: \"80%\" }}\n              href=\"/join-server\"\n              onClick={onPlayOnline}\n            >\n              <img src=\"assets/icons/glob.svg\" alt=\"\" />\n              <Typography>Join A Game</Typography>\n            </Button>\n          </Grid>\n          <Grid item xs={12} md={5} mt={3}>\n            <Button style={{ width: \"80%\" }} onClick={onPlayOffline}>\n              <img src=\"assets/icons/tv.svg\" alt=\"\" />\n              <Typography>Play with PC</Typography>\n            </Button>\n          </Grid>\n        </Grid>\n        <Grid item container alignItems=\"center\" justifyContent=\"center\" mt={6}>\n          <Grid item xs={6}>\n            <Link style={style} to=\"/create-user\">\n              Profile Setting\n            </Link>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          container\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          sx={12}\n        >\n          <Grid item xs={6}>\n            <a\n              style={style}\n              href=\"https://www.ultraboardgames.com/uno/game-rules.php\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Game Rules\n            </a>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default MainMenu;\n","import * as React from \"react\";\nimport { styled } from \"@mui/system\";\nimport SwitchUnstyled, {\n  switchUnstyledClasses,\n} from \"@mui/core/SwitchUnstyled\";\n\nconst Root = styled(\"span\")`\n  font-size: 0;\n  position: relative;\n  display: inline-block;\n  width: 48px;\n  height: 18px;\n  cursor: pointer;\n  border: 2px solid rgb(2 15 108);\n  outline: 1px solid #f3f2f1;\n  box-shadow: 0px 0px 6px 3px rgb(2 15 108);\n  border-radius: 2rem;\n\n  & .${switchUnstyledClasses.track} {\n    background: #f7f7f7;\n    border-radius: 10px;\n    display: block;\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n  & .${switchUnstyledClasses.thumb} {\n    display: block;\n    width: 14px;\n    height: 14px;\n    left: 27px;\n    top: 0px;\n    border-radius: 16px;\n    box-shadow: 0 0 3px 0 #ffb100;\n    background-color: rgb(2 15 108);\n    position: relative;\n    transition: all 200ms ease;\n  }\n\n  &.${switchUnstyledClasses.focusVisible} .${switchUnstyledClasses.thumb} {\n    background-color: rgba(255, 255, 255, 1);\n    box-shadow: 0 0 1px 8px rgba(0, 0, 0, 0.25);\n  }\n\n  &.${switchUnstyledClasses.checked} {\n    .${switchUnstyledClasses.thumb} {\n      left: 2px;\n      top: 0px;\n      box-shadow: 0 0 3px 0 #ffb100;\n      background-color: rgb(2 15 108);\n    }\n\n    .${switchUnstyledClasses.track} {\n      background: #f7f7f7;\n    }\n  }\n\n  & .${switchUnstyledClasses.input} {\n    cursor: inherit;\n    position: absolute;\n\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    opacity: 0;\n    z-index: 1;\n    margin: 0;\n  }\n`;\n\nexport default function UnstyledSwitches(props) {\n  const label = { componentsProps: { input: { \"aria-label\": \"switch\" } } };\n\n  return (\n    <SwitchUnstyled component={Root} {...label} {...props} defaultChecked />\n  );\n}\n","import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Stack from \"@mui/material/Stack\";\nimport Paper from \"../Shared/Paper/Paper\";\nimport Button from \"../Shared/Button/Button\";\nimport TextField from \"../Shared/TextField/TextField\";\nimport Switch from \"../Shared/Switch/Switch\";\nimport { useNavigate } from \"react-router-dom\";\nimport API from \"../../api/API.ts\";\n\nimport Typography from \"../Shared/Typography/Typography\";\nimport { useDispatch } from \"../../utils/hooks\";\nimport { setInLobby, setPlayerId } from \"../../stores/features/gameSlice\";\n\nconst CreateServer = () => {\n  const [serverName, setServerName] = React.useState(\"\");\n  const [serverPassword, setServerPassword] = React.useState(\"\");\n  const [isPrivate, setIsPrivate] = React.useState(true);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const handleCreateServer = async () => {\n    const playerId = await API.createServer(serverName, serverPassword);\n    dispatch(setPlayerId(playerId));\n    dispatch(setInLobby(true));\n    navigate(\"/waiting-lobby\");\n  };\n  return (\n    <Paper>\n      <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n        <Grid item xs={12} md={10}>\n          <Stack justifyContent=\"center\" spacing={1} alignItems=\"center\">\n            <Typography>Choose A Server Name</Typography>\n\n            <TextField\n              label=\"server-name\"\n              value={serverName}\n              onChange={(e) => setServerName(e.target.value)}\n            />\n          </Stack>\n        </Grid>\n        <Grid item xs={10} sm={8} md={6} lg={5} marginTop={2}>\n          <Stack\n            direction=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            gap=\"32px\"\n          >\n            <p\n              style={{\n                color: `${isPrivate ? \"white\" : \"gray\"}`,\n                textShadow: `${isPrivate ? \"0 0 3px white\" : \"\"}`,\n              }}\n            >\n              Private\n            </p>\n            <Switch\n              onChange={() => {\n                setIsPrivate(!isPrivate);\n                setServerPassword(\"\");\n              }}\n            />\n            <p\n              style={{\n                color: `${!isPrivate ? \"white\" : \"gray\"}`,\n                textShadow: `${!isPrivate ? \"0 0 3px white\" : \"\"}`,\n              }}\n            >\n              Public\n            </p>\n          </Stack>\n        </Grid>\n        {isPrivate && (\n          <Grid item xs={12} md={10} marginTop={2}>\n            <Stack justifyContent=\"center\" spacing={1} alignItems=\"center\">\n              <Typography>Server Password</Typography>\n\n              <TextField\n                type=\"password\"\n                label=\"server-password\"\n                value={serverPassword}\n                onChange={(e) => setServerPassword(e.target.value)}\n              />\n            </Stack>\n          </Grid>\n        )}\n\n        <Grid item xs={12} md={10} lg={8}>\n          {((isPrivate && serverName && serverPassword) ||\n            (!isPrivate && serverName)) && (\n            <Button onClick={handleCreateServer}>Creat Server</Button>\n          )}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default CreateServer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nconst CTableContainer = styled.div`\n  min-height: 35vh;\n  background-color: rgba(0, 0, 0, 0.8);\n  border-radius: 1rem;\n\n  color: white;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 60px;\n  max-height: 500px;\n  overflow-y: scroll;\n  ::-webkit-scrollbar {\n    background-color: #07caea;\n    border-radius: 0 1rem 1rem 0;\n  }\n  ::-webkit-scrollbar-thumb {\n    border-radius: 1rem;\n    background-color: #0109f9;\n    border: 2px solid #07caea;\n  }\n  ::-webkit-scrollbar-track-piece {\n  }\n`;\nconst CTableHead = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  padding: 20px;\n`;\nconst CTableCell = styled.p`\n  border-bottom: 1px solid rgb(2 15 108);\n  color: #fff;\n`;\nconst CTableBody = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-auto-rows: minmax(min-content, max-content);\n  padding: 0 20px 20px;\n`;\n\nconst Table = ({ children }) => {\n  return (\n    <CTableContainer>\n      <CTableHead>\n        <CTableCell>Server Name</CTableCell>\n        <CTableCell>Players Joined</CTableCell>\n        <CTableCell>Is Private</CTableCell>\n      </CTableHead>\n      <CTableBody>{children}</CTableBody>\n    </CTableContainer>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Paper from \"../Shared/Paper/Paper\";\nimport Stack from \"@mui/material/Stack\";\nimport Table from \"../Shared/Table/Table\";\nimport Button from \"../Shared/Button/Button\";\nimport TextField from \"../Shared/TextField/TextField\";\nimport Typography from \"../Shared/Typography/Typography\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"../../utils/hooks\";\nimport { setInLobby, setPlayerId } from \"../../stores/features/gameSlice\";\nimport API from \"../../api/API\";\n\nconst CTableRow = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  // display: grid;\n  // grid-template-columns: repeat(3, 1fr);\n  border-radius: 2rem;\n  height: 45px;\n  &:hover {\n    cursor: pointer;\n  }\n`;\nconst CTableCell = styled.p`\n  height: 30px;\n  width: calc(100% / 3);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst JoinServer = () => {\n  const [showPrivate, setShowPrivate] = React.useState(true);\n  const [selectedServer, setSelectedServer] = React.useState(null);\n\n  const [password, setPassword] = React.useState(null); //for show button\n  const [selectOne, setSelectOne] = React.useState(false); //for show button\n\n  const [isPrivate, setIsPrivate] = React.useState(false);\n  const [servers, setServers] = React.useState([]);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    API.playOnline(true);\n    (async () => {\n      const servers = await API.getServers();\n      setServers(servers);\n    })();\n    const interval = setInterval(async () => {\n      const servers = await API.getServers();\n      setServers(servers);\n    }, 4000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const handleJoinServer = async () => {\n    const serverId = servers[selectedServer].id;\n    const playerId = await API.joinServer(serverId, password);\n    dispatch(setPlayerId(playerId));\n    dispatch(setInLobby(true));\n    navigate(\"/waiting-lobby\");\n  };\n\n  return (\n    <Paper>\n      <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={5}>\n        <Grid item xs={12}>\n          <Stack\n            direction=\"row\"\n            alignItems=\"center\"\n            justifyContent=\"flex-end\"\n            spacing={2}\n          >\n            <p\n              style={{\n                color: `${showPrivate ? \" white\" : \"gray\"}`,\n                textShadow: `${showPrivate ? \"0 0 3px white\" : \"\"}`,\n              }}\n            >\n              Show Private Servers\n            </p>\n            <Checkbox\n              defaultChecked\n              color=\"info\"\n              onChange={() => {\n                setShowPrivate(!showPrivate);\n                setSelectedServer(null);\n                setSelectOne(false);\n              }}\n            />\n          </Stack>\n        </Grid>\n        <Grid item xs={12}>\n          <Table>\n            {servers.map((server, index) => {\n              console.log(server);\n              return (\n                <CTableRow\n                  key={index}\n                  onClick={() => {\n                    setSelectedServer(index);\n                    setSelectOne(true);\n                    setPassword(\"\");\n                    if (server.isPrivate) setIsPrivate(true);\n                    else setIsPrivate(false);\n                  }}\n                  style={\n                    index === selectedServer && server.isPrivate\n                      ? {\n                          backgroundColor: \"rgba(0,0,0,.5)\",\n                          border: \" 1px solid #fb0303\",\n                          borderWidth: \"0 0 3px 2px\",\n                          borderRadius: \"1rem\",\n                          boxShadow: \"inset 1px 0 5px 1px black\",\n                        }\n                      : index === selectedServer\n                      ? {\n                          backgroundColor: \"rgba(0,0,0,.5)\",\n                          borderRadius: \"1rem\",\n                        }\n                      : {}\n                  }\n                >\n                  {index === selectedServer && server.isPrivate ? (\n                    <>\n                      <CTableCell>{server.serverName}</CTableCell>\n                      <TextField\n                        type=\"password\"\n                        placeholder=\"Enter the server password\"\n                        style={{\n                          height: \"100%\",\n                          border: \"none\",\n                          background: \"none\",\n                          boxShadow: \"none\",\n                        }}\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                      />\n                    </>\n                  ) : (\n                    <>\n                      <CTableCell>{server.name}</CTableCell>\n                      <CTableCell>{server.cntPlayers}</CTableCell>\n                      <CTableCell>{server.isPrivate ? \"Yes\" : \"\"}</CTableCell>\n                    </>\n                  )}\n                </CTableRow>\n              );\n            })}\n          </Table>\n        </Grid>\n        <Grid item xs={12}>\n          {((selectOne && isPrivate && password) ||\n            (selectOne && !isPrivate)) && (\n            <Button onClick={handleJoinServer}>\n              <Typography>Join Game</Typography>\n            </Button>\n          )}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default JoinServer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nconst CLoading = styled.span`\n  display: inline-block;\n  position: relative;\n  span {\n    animation: loading 1.2s ease-in-out infinite;\n    position: absolute;\n    width: 2px;\n    background-color: white;\n    box-shadow: 0 0 2px white;\n  }\n\n  span:nth-child(1) {\n    left: 5px;\n    animation-delay: -0.24s;\n    display: inline-block;\n  }\n\n  span:nth-child(2) {\n    left: 10px;\n    animation-delay: -0.12s;\n    display: inline-block;\n  }\n  span:nth-child(3) {\n    left: 15px;\n    animation-delay: 0s;\n    display: inline-block;\n  }\n  @keyframes loading {\n    0% {\n      top: -1px;\n      height: 1px;\n    }\n    50%,\n    100% {\n      top: -2px;\n      height: 2px;\n    }\n  }\n`;\nconst Loding = () => {\n  return (\n    <CLoading>\n      <span></span>\n      <span></span>\n      <span></span>\n    </CLoading>\n  );\n};\n\nexport default Loding;\n","import React, { useEffect } from \"react\";\nimport Paper from \"../Shared/Paper/Paper\";\nimport Avatar from \"../Shared/Avatar/Avatar\";\nimport Typography from \"../Shared/Typography/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Stack from \"@mui/material/Stack\";\nimport Loding from \"./Loding\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"../../utils/hooks\";\nimport { init, setInLobby } from \"../../stores/features/gameSlice\";\nimport { useNavigate, useLocation, Navigate } from \"react-router-dom\";\nimport API from \"../../api/API\";\n\nconst Span = styled.span`\n  color: #f37006;\n  text-shadow: 0 0 4px #f37006;\n  font-weight: bold;\n  font-size: larger;\n`;\n\nconst Lobby = () => {\n  const [players, setPlayers] = React.useState([]);\n\n  const inLobby = useSelector((state) => state.game.inLobby);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!inLobby) return;\n\n    let timeout = null;\n    let unsubInit = null;\n    (async () => {\n      const serverPlayers = await API.getServerPlayers();\n      setPlayers(serverPlayers);\n      API.onPlayersUpdated((players) => setPlayers(players));\n      unsubInit = API.onGameInit(({ players, cards }) => {\n        dispatch(init({ cards, players }));\n        timeout = setTimeout(() => navigate(\"/game\"), 2000);\n      });\n    })();\n\n    return () => {\n      if (timeout) clearTimeout(timeout);\n      if (unsubInit) unsubInit();\n      dispatch(setInLobby(false));\n    };\n  }, [dispatch, navigate, inLobby]);\n\n  if (location.pathname === \"/waiting-lobby\" && !inLobby)\n    return <Navigate replace to=\"/main-menu\" />;\n\n  return (\n    <Paper>\n      <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n        <Grid item xs={8}>\n          <Typography>\n            Waiting for Other Players To Join\n            <Loding />\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography>\n            Joined ( <Span>{players.length}</Span>/4 )\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          container\n          flexWrap=\"nowrap\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          spacing={0.5}\n          gap={6}\n          xs={12}\n        >\n          {players.map((player) => {\n            return (\n              <Stack\n                key={player.id}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                spacing={1}\n              >\n                <Avatar seed={`${player.name}${player.img}`} />\n                <Typography>{player.name}</Typography>\n              </Stack>\n            );\n          })}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Lobby;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport gameSlice from \"./features/gameSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    game: gameSlice,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\n","import { Typography } from \"@mui/material\";\nimport { motion } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport styled from \"styled-components\";\n\nconst Root = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  cursor: pointer;\n\n  .img {\n    width: 80%;\n    max-width: 500px;\n\n    img {\n      width: 100%;\n    }\n  }\n\n  .text {\n    text-shadow: 1px 3px 16px black;\n  }\n`;\n\nexport default function StartPage() {\n  const [mounted, setMounted] = useState(false);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (localStorage.getItem(\"playerName\")) navigate(\"/main-menu\");\n      else navigate(\"/create-user\");\n    }, 3000);\n  }, [navigate]);\n\n  return (\n    <Root\n      as={motion.div}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1, x: 0 }}\n      exit={{ opacity: 0, x: -500 }}\n      transition={{ duration: 0.7 }}\n    >\n      <motion.div\n        initial={{ y: \"-100%\", opacity: 0 }}\n        animate={{\n          opacity: 1,\n          y: 0,\n          transition: { type: \"spring\", stiffness: 100, duration: 1 },\n        }}\n        className=\"img\"\n      >\n        <img src=\"assets/images/uno-logo.png\" alt=\"UNO Logo\" />\n      </motion.div>\n      <Typography\n        variant=\"h4\"\n        mt={8}\n        className=\"text\"\n        component={motion.h3}\n        initial={{\n          opacity: 0,\n          y: 100,\n        }}\n        animate={\n          mounted\n            ? {\n                opacity: 1,\n                y: [0, -10, 0],\n                transition: {\n                  repeat: Infinity,\n                  duration: 0.9,\n                  times: [0.4, 0.6, 1],\n                  ease: \"easeInOut\",\n                },\n              }\n            : {\n                opacity: 1,\n                y: 0,\n                transition: {\n                  type: \"spring\",\n                  stiffness: 100,\n                  duration: 1,\n                  delay: 1,\n                },\n              }\n        }\n        onAnimationComplete={() => setMounted(true)}\n      >\n        Welcome to UNO The Game\n      </Typography>\n    </Root>\n  );\n}\n","import GameAudio from \"./audio\";\nimport { EventsObject } from \"./EventsObject\";\n\nclass _Loader extends EventsObject {\n  imgs = [\n    \"assets/images/backside.png\",\n    \"assets/images/uno-logo.png\",\n    \"assets/images/draw four-blank.png\",\n    \"assets/images/draw two-blank.png\",\n    \"assets/images/draw two-blue.png\",\n    \"assets/images/draw two-green.png\",\n    \"assets/images/draw two-red.png\",\n    \"assets/images/draw two-yellow.png\",\n    \"assets/images/draw4.png\",\n    \"assets/images/front-black.png\",\n    \"assets/images/front-blue.png\",\n    \"assets/images/front-green.png\",\n    \"assets/images/front-red.png\",\n    \"assets/images/front-yellow.png\",\n    \"assets/images/reverse-blank.png\",\n    \"assets/images/reverse-blue.png\",\n    \"assets/images/reverse-green.png\",\n    \"assets/images/reverse-red.png\",\n    \"assets/images/reverse-yellow.png\",\n    \"assets/images/skip-blank.png\",\n    \"assets/images/skip-blue.png\",\n    \"assets/images/skip-green.png\",\n    \"assets/images/skip-red.png\",\n    \"assets/images/skip-yellow.png\",\n    \"assets/images/wild.png\",\n  ];\n  audios = {\n    music: \"assets/audio/bg-music.mp3\",\n    shuffle: \"assets/audio/shuffle.mp3\",\n    play: \"assets/audio/play.mp3\",\n    draw: \"assets/audio/draw.mp3\",\n  };\n\n  totalCnt = 0;\n  loadedCnt = 0;\n\n  constructor() {\n    super();\n    this.onProgress = this.onProgress.bind(this);\n  }\n\n  load() {\n    this.totalCnt = this.imgs.length + Object.keys(this.audios).length;\n    this.loadedCnt = 0;\n\n    GameAudio.preload(this.audios, this.onProgress);\n\n    for (const img of this.imgs) {\n      this.preloadImage(img);\n    }\n  }\n\n  preloadImage(url: string) {\n    try {\n      var _img = new Image();\n      _img.src = url;\n      _img.onload = this.onProgress;\n    } catch (e) {\n      console.error(\"Failed Loading Images\");\n      console.error(e);\n    }\n  }\n\n  onProgress() {\n    this.loadedCnt++;\n    this.fireEvent(\"progress\", this.loadedCnt / this.totalCnt);\n    if (this.loadedCnt === this.totalCnt) this.fireEvent(\"completed\");\n  }\n}\n\nconst Loader = new _Loader();\nexport default Loader;\n","import { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Loader from \"../../../utils/loader\";\n\nconst Root = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: black;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  cursor: pointer;\n\n  h2 {\n    text-align: center;\n    margin-bottom: 36px;\n    font-size: 10vmin;\n  }\n\n  p {\n    font-size: 5vmin;\n    text-shadow: 0 0 10px white;\n    animation: animateText 2s infinite ease-in-out;\n  }\n\n  @keyframes animateText {\n    50% {\n      text-shadow: 0 0 15px white;\n      transform: scale(1.05);\n    }\n  }\n`;\n\nexport default function Loading({ onLoaded }) {\n  const [percentage, setPercentage] = useState(3);\n  const [completed, setCompleted] = useState(false);\n\n  useEffect(() => {\n    Loader.load();\n    Loader.addEventListener(\"progress\", (value) => {\n      setPercentage(Math.round(100 * value));\n    });\n\n    Loader.addEventListener(\"completed\", () => {\n      setCompleted(true);\n    });\n  }, []);\n\n  const onClick = () => {\n    if (completed) {\n      onLoaded();\n    }\n  };\n\n  return (\n    <Root onClick={onClick}>\n      {completed ? (\n        <>\n          <h2>Ready!!</h2>\n          <p>Click Anywhere to Start</p>\n        </>\n      ) : (\n        <>\n          <h2>Loading Game Assets...</h2>\n          <p>{percentage}%</p>\n        </>\n      )}\n    </Root>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../Button/Button\";\n\nconst Root = styled.div`\n  position: fixed;\n  inset: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  color: white;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  h2 {\n    font-size: 5vmin;\n  }\n\n  p {\n    margin-top: 24px;\n    margin-bottom: 40px;\n  }\n\n  button {\n  }\n`;\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo,\n    });\n    // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    if (this.state.error) {\n      // Error path\n      return (\n        <Root>\n          <h2>\n            Oooop....\n            <br />\n            Something went wrong :(\n          </h2>\n          <p>We are very sorry for that, please reload the page</p>\n          <Button href=\"/main-menu\">Reload Page</Button>\n          {/* <details style={{ whiteSpace: \"pre-wrap\" }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </details> */}\n        </Root>\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }\n}\n","import styled from \"styled-components\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Game from \"./Components/Game/Game\";\nimport CreateUser from \"./Components/CreateUser/CreateUser\";\nimport MainMenu from \"./Components/MainMenu/MainMenu\";\nimport CreateServer from \"./Components/CreateServer/CreateServer\";\nimport JoinServer from \"./Components/JoinServer/JoinServer\";\nimport Lobby from \"./Components/WaitingLobby/Lobby\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./stores/store\";\nimport { useState } from \"react\";\nimport StartPage from \"./Components/StartPage/StartPage\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { useLocation } from \"react-router-dom\";\nimport Loading from \"./Components/Shared/Loading/Loading\";\nimport GameAudio from \"./utils/audio\";\nimport ErrorBoundary from \"./Components/Shared/ErrorBoundary/ErrorBoundary\";\n\nconst Root = styled.div`\n  min-height: 100vh;\n  width: 100%;\n  overflow-x: hidden;\n  /* background: radial-gradient(#5065da, #20295a); */\n  background: radial-gradient(#3d50ba, #161d3f);\n`;\n\n// screen.lockOrientation(\"landscape\");\n\nfunction App() {\n  const [loadingAssets, setLoadingAssets] = useState(true);\n\n  const location = useLocation();\n\n  const onLoaded = () => {\n    GameAudio.playMusic(\"music\");\n    setLoadingAssets(false);\n  };\n\n  if (loadingAssets) return <Loading onLoaded={onLoaded} />;\n\n  return (\n    <Root>\n      <Provider store={store}>\n        <AnimatePresence exitBeforeEnter>\n          <ErrorBoundary>\n            <Routes location={location} key={location.key}>\n              <Route\n                key={\"/create-user\"}\n                path=\"/create-user\"\n                element={<CreateUser />}\n              />\n              <Route\n                key={\"/main-menu\"}\n                path=\"/main-menu\"\n                element={<MainMenu />}\n              />\n              <Route\n                key={\"/create-server\"}\n                path=\"/create-server\"\n                element={<CreateServer />}\n              />\n              <Route\n                key={\"/join-server\"}\n                path=\"/join-server\"\n                element={<JoinServer />}\n              />\n              <Route key={\"/game\"} path=\"/game\" element={<Game />} />\n              <Route\n                key={\"/waiting-lobby\"}\n                path=\"/waiting-lobby\"\n                element={<Lobby />}\n              />\n              <Route key={\"/\"} path=\"/\" element={<StartPage />} />\n            </Routes>\n          </ErrorBoundary>\n        </AnimatePresence>\n      </Provider>\n    </Root>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter\n      basename={process.env.NODE_ENV === \"production\" ? \"/uno\" : \"/\"}\n    >\n      <CssBaseline />\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}